[{"/mnt/ap/ap/Soundtracks/client/src/index.js":"1","/mnt/ap/ap/Soundtracks/client/src/App.js":"2","/mnt/ap/ap/Soundtracks/client/src/reportWebVitals.js":"3","/mnt/ap/ap/Soundtracks/client/src/context/soundtrackState.js":"4","/mnt/ap/ap/Soundtracks/client/src/components/Home.js":"5","/mnt/ap/ap/Soundtracks/client/src/components/Results/Results.js":"6","/mnt/ap/ap/Soundtracks/client/src/components/Seasons/Seasons.js":"7","/mnt/ap/ap/Soundtracks/client/src/components/Songs/Songs.js":"8","/mnt/ap/ap/Soundtracks/client/src/components/Episodes/Episodes.js":"9","/mnt/ap/ap/Soundtracks/client/src/components/Songs/ShowSongs.js":"10","/mnt/ap/ap/Soundtracks/client/src/components/Youtube/Youtube.js":"11","/mnt/ap/ap/Soundtracks/client/src/components/Errors/Error.js":"12","/mnt/ap/ap/Soundtracks/client/src/components/Playlist/Playlist.js":"13","/mnt/ap/ap/Soundtracks/client/src/context/soundtrackContext.js":"14","/mnt/ap/ap/Soundtracks/client/src/context/actions.js":"15","/mnt/ap/ap/Soundtracks/client/src/context/soundtrackReducer.js":"16","/mnt/ap/ap/Soundtracks/client/src/components/Navbar.js":"17","/mnt/ap/ap/Soundtracks/client/src/components/SearchBar.js":"18","/mnt/ap/ap/Soundtracks/client/src/components/Results/ResultsItemList.js":"19","/mnt/ap/ap/Soundtracks/client/src/components/Seasons/SeasonsItemList.js":"20","/mnt/ap/ap/Soundtracks/client/src/components/Songs/SongsItemList.js":"21","/mnt/ap/ap/Soundtracks/client/src/components/Episodes/EpisodeItemList.js":"22","/mnt/ap/ap/Soundtracks/client/src/components/Youtube/YoutubeItemList.js":"23","/mnt/ap/ap/Soundtracks/client/src/components/Playlist/PlaylistItem.js":"24","/mnt/ap/ap/Soundtracks/client/src/utils/api.js":"25","/mnt/ap/ap/Soundtracks/client/src/components/AppleMusic/AppleAuth.js":"26","/mnt/ap/ap/Soundtracks/client/src/core/ MusicProvider.js":"27"},{"size":674,"mtime":1641530499734,"results":"28","hashOfConfig":"29"},{"size":1492,"mtime":1641530499730,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1641530499734,"results":"31","hashOfConfig":"29"},{"size":3527,"mtime":1641530499734,"results":"32","hashOfConfig":"29"},{"size":383,"mtime":1641530499730,"results":"33","hashOfConfig":"29"},{"size":459,"mtime":1641530499730,"results":"34","hashOfConfig":"29"},{"size":953,"mtime":1641530499730,"results":"35","hashOfConfig":"29"},{"size":2839,"mtime":1641530499730,"results":"36","hashOfConfig":"29"},{"size":1004,"mtime":1641530499730,"results":"37","hashOfConfig":"29"},{"size":3200,"mtime":1641530499730,"results":"38","hashOfConfig":"29"},{"size":489,"mtime":1641530499730,"results":"39","hashOfConfig":"29"},{"size":120,"mtime":1641530499730,"results":"40","hashOfConfig":"29"},{"size":2794,"mtime":1641530499730,"results":"41","hashOfConfig":"29"},{"size":111,"mtime":1641530499734,"results":"42","hashOfConfig":"29"},{"size":653,"mtime":1641530499734,"results":"43","hashOfConfig":"29"},{"size":2026,"mtime":1641530499734,"results":"44","hashOfConfig":"29"},{"size":1160,"mtime":1641530499730,"results":"45","hashOfConfig":"29"},{"size":1195,"mtime":1641530499730,"results":"46","hashOfConfig":"29"},{"size":1206,"mtime":1641530499730,"results":"47","hashOfConfig":"29"},{"size":936,"mtime":1641530499730,"results":"48","hashOfConfig":"29"},{"size":1099,"mtime":1641530499730,"results":"49","hashOfConfig":"29"},{"size":985,"mtime":1641530499730,"results":"50","hashOfConfig":"29"},{"size":1824,"mtime":1641530499730,"results":"51","hashOfConfig":"29"},{"size":1046,"mtime":1641530499730,"results":"52","hashOfConfig":"29"},{"size":1032,"mtime":1641530499734,"results":"53","hashOfConfig":"29"},{"size":1418,"mtime":1641530499730,"results":"54","hashOfConfig":"29"},{"size":549,"mtime":1641530499734,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"17oebbi",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/ap/ap/Soundtracks/client/src/index.js",[],["120","121"],"/mnt/ap/ap/Soundtracks/client/src/App.js",[],"/mnt/ap/ap/Soundtracks/client/src/reportWebVitals.js",[],"/mnt/ap/ap/Soundtracks/client/src/context/soundtrackState.js",[],"/mnt/ap/ap/Soundtracks/client/src/components/Home.js",[],"/mnt/ap/ap/Soundtracks/client/src/components/Results/Results.js",[],"/mnt/ap/ap/Soundtracks/client/src/components/Seasons/Seasons.js",["122","123","124"],"import React, {useContext, useEffect} from 'react'\nimport api from '../../utils/api'\nimport NavBar from '../Navbar'\nimport SoundtrackContext from '../../context/soundtrackContext'\nimport SeasonsItemList from './SeasonsItemList'\n\n\nexport default function Seasons() {\n\nconst {selectedResult,selectedSeason, selectedEpisode,setSeasonResults, seasonResults}= useContext(SoundtrackContext)\n\nasync function getSeasons(assetLink){\n  return await api.getSeasons(assetLink)\n}\n\nuseEffect(()=>{\ngetSeasons(selectedResult.assetLink).then((seasons)=>{\n  setSeasonResults(seasons.data)\n})\n\n},[])\n  \n  return (\n    <div>\n    <NavBar/>\n\n      <p className=\"mt-2 shadow p-3 mb-5 bg-white rounded text-capitalize\">{selectedResult.assetName}</p>\n      <div className=\"container\">\n      <ul className=\"mt-3\">\n      {seasonResults.map((item)=>{\n        return   <SeasonsItemList  key={item.assetLink}  seasondetail={item}  />\n      })}\n    </ul>\n    </div>\n    </div>\n  )\n}\n","/mnt/ap/ap/Soundtracks/client/src/components/Songs/Songs.js",["125"],"import React, {useContext, useEffect} from 'react'\nimport api from '../../utils/api'\nimport SongItemList from './SongsItemList'\nimport SoundtrackContext from '../../context/soundtrackContext'\nimport { useHistory } from \"react-router-dom\";\nimport NavBar from '../Navbar'\nimport ReactTooltip from 'react-tooltip'\n\n\nexport default function Songs() {\n  \n  const {selectedResult, setSongResults,songResults,setAppleSongs, setLoadingStatus,loadingStatus}= useContext(SoundtrackContext)\n  const history = useHistory()  \n\n  const sleep = (milliseconds) => {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }\n\n  async function getMoiveSongs(assetLink) {\n    return await api.getSongs(selectedResult.assetLink)\n  }\n\n  async function getShowSongs(assetLink) {\n    return await api.getSongs(selectedResult.assetLink)\n  }\n  \n  useEffect(()=>{\n   if (selectedResult.assetType !== 'show'){\n    getMoiveSongs(selectedResult.assetLink).then((songs)=>{\n      setSongResults(songs.data)\n    })\n   } else {\n    getShowSongs(selectedResult.assetLink).then((songs)=>{\n      setSongResults(songs.data)\n    })\n   }\n  },[])\n  \nconst getAppleSongs = async (SongArray)=>{\n  \n  let songsObject = []\n  for (const item of SongArray){\n    await sleep(1)\n    const title = item.title.replace(/[^a-zA-Z0-9\\s]/g, ' ')\n    const artist = item.artist.replace(/[^a-zA-Z0-9\\s]/g, ' ')\n    const searchStr = `${title} ${artist}`\n    const result = await api.getAppleSongResult(searchStr)\n    if (typeof result.data.results !== \"undefined\"){\n      const data = result.data\n      songsObject.push(data)\n    } else{ \n     \n      }\n  }\n  return songsObject\n}\n\n\n\nconst handleClick = async ()=>{\n  setLoadingStatus(true)\n  const songs = await getAppleSongs(songResults)\n Promise.all(songs).then((data)=>{\n   const songs = data.filter((item)=>{\n     return item !== undefined\n   })\n   setAppleSongs(songs)  \n }).catch((error)=>{console.log(error)})\n   history.push('/playlist')\n   }\n\n  return (\n    <div>\n      <NavBar/>\n    \n      <p className=\" mt-2 shadow p-3 mb-5 bg-white rounded text-capitalize\">{selectedResult.assetName}\n       <span>\n       <img  data-tip data-for=\"searchApple\" className=\"icons\" onClick={()=>{handleClick(songResults)}} src='/images/create-playlist.png' alt='create playlist'/>\n      <ReactTooltip id=\"searchApple\" place=\"top\" effect=\"solid\">\n        Search Apple Music\n      </ReactTooltip></span></p> \n      <div className=\"container\">\n      <ul className=\"mt-3\">\n      {loadingStatus ?  <div className=\"d-flex justify-content-center\"><div className=\"spinner-grow text-primary m-4\" role=\"status\">\n  </div> <p className=\"font-weight-lighter display-4\">Searching Please Wait....</p></div> \n :\n      songResults.map((item)=>{\n        return <SongItemList key={item.title} song={item}/>\n      })}\n     </ul>\n    </div>\n    </div>\n  )\n}\n\n","/mnt/ap/ap/Soundtracks/client/src/components/Episodes/Episodes.js",["126"],"import EpisodeItemList from './EpisodeItemList'\nimport React, {useContext, useEffect} from 'react'\nimport api from '../../utils/api'\nimport NavBar from '../Navbar'\nimport SoundtrackContext from '../../context/soundtrackContext'\n\nexport default function Episodes() {\n  const {selectedResult,selectedSeason, setEpisodeResults, episodeResults}= useContext(SoundtrackContext)\n\n\nasync function getEpisodes(assetLink){\n  return await api.getEpisodes(assetLink)\n}\n\n  useEffect(()=>{\n    getEpisodes(selectedSeason.assetLink).then((episode)=>{\n    setEpisodeResults(episode.data)\n    })\n  },[])\n\n\n  return (\n    <div>\n      <NavBar/>\n      <p className=\"mt-2 shadow p-3 mb-5 bg-white rounded text-capitalize\">{selectedResult.assetName} / {selectedSeason.assetSeason}</p>\n      \n      \n      <div className=\"container\">\n      <ul className=\"mt-3\">\n      {episodeResults.map((item)=>{\n        return   <EpisodeItemList key={item.assetLink} episodedetail={item}/>\n      })}\n       </ul>\n    </div>\n    </div>\n  )\n}\n","/mnt/ap/ap/Soundtracks/client/src/components/Songs/ShowSongs.js",["127"],"import SongItemList from './SongsItemList';\nimport React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../utils/api';\nimport NavBar from '../Navbar';\nimport SoundtrackContext from '../../context/soundtrackContext';\nimport ReactTooltip from 'react-tooltip';\n\nexport default function ShowSongs() {\n  const {\n    selectedResult,\n    selectedEpisode,\n    selectedSeason,\n    setSongResults,\n    songResults,\n    setAppleSongs,\n    setLoadingStatus,\n    loadingStatus,\n  } = useContext(SoundtrackContext);\n  const history = useHistory();\n\n  async function getShowSongs(assetLink) {\n    return await api.getShowSongs(assetLink);\n  }\n\n  useEffect(() => {\n    getShowSongs(selectedEpisode.assetLink).then((songs) => {\n      setSongResults(songs.data);\n    });\n  }, []);\n\n  const sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n\n  const getAppleSongs = async (SongArray) => {\n    let songsObject = [];\n    for (const item of SongArray) {\n      await sleep(1);\n      const title = item.title.replace(/[^a-zA-Z0-9\\s]/g, ' ');\n      const artist = item.artist.replace(/[^a-zA-Z0-9\\s]/g, ' ');\n      const searchStr = `${title} ${artist}`;\n      const result = await api.getAppleSongResult(searchStr);\n      if (typeof result.data.results !== 'undefined') {\n        const data = result.data;\n        songsObject.push(data);\n      } else {\n      }\n    }\n    return songsObject;\n  };\n\n  const handleClick = async () => {\n    setLoadingStatus(true);\n    const songs = await getAppleSongs(songResults);\n    Promise.all(songs)\n      .then((data) => {\n        const songs = data.filter((item) => {\n          return item !== undefined;\n        });\n\n        setAppleSongs(songs);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    history.push('/playlist');\n  };\n\n  return (\n    <div>\n      <NavBar />\n\n      <p className=\" mt-2 shadow p-3 mb-5 bg-white rounded text-capitalize\">\n        {selectedResult.assetName} / {selectedSeason.assetSeason} /{' '}\n        {selectedEpisode.assetName}\n        <span>\n          {' '}\n          <img\n            data-tip\n            data-for=\"searchApple\"\n            className=\"icons\"\n            onClick={() => {\n              handleClick(songResults);\n            }}\n            src=\"/images/create-playlist.png\"\n            alt=\"create playlist\"\n          />\n          <ReactTooltip id=\"searchApple\" place=\"top\" effect=\"solid\">\n            Search Apple Music\n          </ReactTooltip>\n        </span>\n      </p>\n\n      <div className=\"container\">\n        <ul className=\"mt-3\">\n          {loadingStatus ? (\n            <div className=\"d-flex justify-content-center\">\n              <div\n                className=\"spinner-grow text-primary m-4\"\n                role=\"status\"\n              ></div>{' '}\n              <p className=\"font-weight-lighter display-4\">\n                Searching Please Wait....\n              </p>\n            </div>\n          ) : (\n            songResults.map((item) => {\n              return <SongItemList key={item.title} song={item} />;\n            })\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","/mnt/ap/ap/Soundtracks/client/src/components/Youtube/Youtube.js",["128"],"import React, {useContext, useEffect} from 'react'\nimport SoundtrackContext from '../../context/soundtrackContext'\nimport NavBar from '../Navbar'\n\nimport YoutubeItemList from './YoutubeItemList'\n\nexport default function Youtube() {\n\n  const {youtubeResults}= useContext(SoundtrackContext)\n  return (\n    <div>\n        <NavBar/>\n      {youtubeResults && youtubeResults.map((item)=>{\n         return   <YoutubeItemList key={item.id.videoId} youtube={item}/>\n      \n      })}\n    </div>\n  )\n}","/mnt/ap/ap/Soundtracks/client/src/components/Errors/Error.js",[],"/mnt/ap/ap/Soundtracks/client/src/components/Playlist/Playlist.js",["129","130","131"],"import React, {useContext, useEffect} from 'react'\nimport SoundtrackContext from '../../context/soundtrackContext'\nimport NavBar from '../Navbar'\nimport api from '../../utils/api'\nimport PlaylistItemList from './PlaylistItem'\nimport ReactTooltip from 'react-tooltip'\n\nexport default function Youtube() {\n\n  const {appleSongs,selectedResult,selectedEpisode,selectedSeason, appleUserToken,playlistCreated,setPlaylistCreated}= useContext(SoundtrackContext)\n   console.log(\"name: \",selectedResult.assetName)\n   console.log(\"episode: \",selectedEpisode.assetName )\n  let playlistName=''\n  if (selectedEpisode.assetName === undefined){\n   playlistName=`${selectedResult.assetName}`\n}else {\n   playlistName=`${selectedResult.assetName} ${selectedEpisode.assetName}`\n}\n\n\n// Create JSON for posting to apples API for the user account \n  const createPlaylistJson= (token)=>{\n   let songJson=[]\n   \n   appleSongs.map((item)=>{\nif (typeof item.results.songs.data[0].id !== \"undefined\"){\n   songJson= [...songJson, {\n      id:item.results.songs.data[0].id,\n      type:\"songs\"\n   }]\n         } else{console.log('No song ID found')}\n\n   })\n   const playlistJson={\n      userAuth: token,\n      appleRequest: {\n         attributes: {\n            name: playlistName,\n            description: \"Created by my way cool soundtrack app\"\n         },\n         relationships:{\n            tracks:{\n               data:\n                  songJson\n               \n            }\n         }\n\n\n      }\n     }\n     return playlistJson\n  }\n\n  \n\n\n\n\n\n\n const handleAddPlaylist = ()=>{\n   const json =createPlaylistJson(appleUserToken)\n   api.createApplePlaylist(json).then((data)=>{\n     setPlaylistCreated(true)\n   })\n }\n\n  return (\n    <div>\n        <NavBar/>\n      \n        <p className=\" mt-2 shadow p-3 mb-5 bg-white rounded text-capitalize\">{selectedResult.assetName} / {selectedSeason.assetSeason} / {selectedEpisode.assetName} <span>  \n           {playlistCreated ?    <img  data-tip data-for=\"playlistCreated\" onClick={()=>{handleAddPlaylist()}} className=\"icons\" title=\"Playlist created\" src='/images/playlist-created.svg' alt='create playlist'/>  :\n           <img  data-tip data-for=\"createPlaylist\" onClick={()=>{handleAddPlaylist()}} className=\"icons\"  src='/images/add-playlist.svg' alt='create playlist'/> \n           }\n           \n           <ReactTooltip id=\"playlistCreated\" place=\"top\" effect=\"solid\">Playlist Created</ReactTooltip>\n           <ReactTooltip id=\"createPlaylist\" place=\"top\" effect=\"solid\">Create Playlist on Apple Music</ReactTooltip>\n          </span></p>\n\n          <div className=\"container\">\n      <ul className=\"mt-3\">\n\n{ appleSongs.map((item)=>{\n\nif(item){\n  return <PlaylistItemList  key={item.results.songs.data[0].id} song={item}/>\n}\n  \n}) }\n\n   </ul>\n    </div>\n    </div>\n  )\n}  \n\n\n\n","/mnt/ap/ap/Soundtracks/client/src/context/soundtrackContext.js",[],"/mnt/ap/ap/Soundtracks/client/src/context/actions.js",[],"/mnt/ap/ap/Soundtracks/client/src/context/soundtrackReducer.js",[],"/mnt/ap/ap/Soundtracks/client/src/components/Navbar.js",[],"/mnt/ap/ap/Soundtracks/client/src/components/SearchBar.js",[],"/mnt/ap/ap/Soundtracks/client/src/components/Results/ResultsItemList.js",[],"/mnt/ap/ap/Soundtracks/client/src/components/Seasons/SeasonsItemList.js",[],"/mnt/ap/ap/Soundtracks/client/src/components/Songs/SongsItemList.js",[],"/mnt/ap/ap/Soundtracks/client/src/components/Episodes/EpisodeItemList.js",[],"/mnt/ap/ap/Soundtracks/client/src/components/Youtube/YoutubeItemList.js",["132","133","134","135","136","137","138"],"import React,{useContext,useEffect} from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport SoundtrackContext from '../../context/soundtrackContext'\nimport api from '../../utils/api'\n\nexport default function YoutubeItemList(props) {\n  const  parser = new DOMParser;\n  const {setYoutubeVideo, youtubeVideo }= useContext(SoundtrackContext)\n  const history = useHistory()  \n\n  // const handleClick = async (videoId)=> {\n  // const results = await api.getYoutubeVideo(videoId)\n  // setYoutubeVideo(results)\n  // history.push('/player')\n  // }\n\n  const srcString = `//www.youtube.com/embed/${props.youtube.id.videoId}`\n  \n  // need to parse out unicode elements from what youtube has returned \n  const t1 = parser.parseFromString(props.youtube.snippet.title, \"text/html\")\n  const title=t1.body.textContent\n\n  const date = new Date(props.youtube.snippet.publishTime).toLocaleDateString(\n    'en-us',\n    {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    }\n  );\n  \n  return (\n    <div>\n    <li className=\"list-group-item\">\n      <div className='row'>\n        <div className='col-4 iframe-container shadow-lg'>\n          <iframe title=\"video\"  src={srcString} frameborder=\"1\" allow=\"accelerometer; autoplay; fullscreen allowfullscreen\" />\n          </div>\n   \n      <div className='col'><p className='text-capitalize headline-text lh-1'>{title} </p>\n      <p className='subline-text text-capitalize fw-light lh-1'> {date}</p>\n      <p className='subline-text text-capitalize fw-light lh-1'>{props.youtube.snippet.description}</p>\n    \n\n      </div>\n   \n     \n      </div>\n    \n    </li>\n    </div>\n  )\n}\n\n\n// {props.youtube.snippet.title}\n// width=\"280\" height=\"160\"\n{/* <iframe width=\"480\" height=\"360\" src=\"//www.youtube.com/embed/N8I-hnSS7DQ\" frameborder=\"0\" allow=\"accelerometer; autoplay;\"/> */}","/mnt/ap/ap/Soundtracks/client/src/components/Playlist/PlaylistItem.js",["139"],"import React from 'react'\n\nexport default function PlaylistItem(props) {\n\nlet artwork=props.song.results.songs.data[0].attributes.artwork.url\nartwork = artwork.replace(\"{w}\",\"250\")\nartwork =artwork.replace(\"{h}\",\"250\")\n\nconst id = props.song.results.songs.data[0].id \nconst date = new Date(props.song.results.songs.data[0].attributes.releaseDate).toLocaleDateString(\n  'en-us',\n  {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  }\n);\n\n\n\n\n  return (\n    <div>\n    <li className=\"list-group-item list-item\">\n      <div className='row'>\n        <div className='col-4 '><img className='ellipse' src={artwork} alt='elipse'/> </div>\n      \n      <div className='col'><p className='text-capitalize headline-text lh-1'>{props.song.results.songs.data[0].attributes.name} </p>\n      <p className='subline-text text-capitalize fw-light lh-1'>{props.song.results.songs.data[0].attributes.artistName}</p>\n      <p className='subline-text text-capitalize fw-light lh-1'>{date}</p>\n      </div>\n     \n      </div>\n    \n    </li>\n    </div>\n\n  )\n}\n","/mnt/ap/ap/Soundtracks/client/src/utils/api.js",[],"/mnt/ap/ap/Soundtracks/client/src/components/AppleMusic/AppleAuth.js",["140"],"\nimport React, {useContext} from 'react'\nimport SoundtrackContext from '../../context/soundtrackContext'\nimport MusicProvider from '../../core/ MusicProvider'\nimport axios from 'axios'\n\n\nlet musicProvider = MusicProvider.sharedProvider();\n\nexport default function AppleAuth() {\n  const {appleUserToken,setAppleUserToken}= useContext(SoundtrackContext)\n\n  Object.keys(appleUserToken)\n  \n  const handleSignIn = async (event)=>{\n    \n      const result = await axios.get('/api/devtoken')\n      musicProvider.configure(result.data.token)\n      const musicInstance = musicProvider.getMusicInstance();\n      const auth = await musicInstance.authorize()\n    \n      setAppleUserToken(auth)\n  }\n\n  const handleSignOut = async (event)=>{\n    const result = await axios.get('/api/devtoken')\n    musicProvider.configure(result.data.token)\n    const musicInstance = musicProvider.getMusicInstance();\n    const auth = await musicInstance.unauthorize()\n  \n    setAppleUserToken(false)\n}\n\n\n  return (\n    <div>\n    \n      {appleUserToken ? <p className=\"navbar-brand\"  title=\"Sign Out\" onClick={()=>{handleSignOut()}}> Sign Out <img className=\"rounded-circle\" src='/images/left-apple-logo.svg' alt='sign out'  /></p> :\n      \n      <p className=\"navbar-brand\"  title=\"Sign In\" onClick={()=>{handleSignIn()}} > Sign In <img className=\"rounded-circle\" src='/images/left-black-apple.svg' alt='sign in' /></p> \n      }\n    </div>\n  )\n}\n\n\n","/mnt/ap/ap/Soundtracks/client/src/core/ MusicProvider.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":10,"column":23,"nodeType":"147","messageId":"148","endLine":10,"endColumn":37},{"ruleId":"145","severity":1,"message":"149","line":10,"column":39,"nodeType":"147","messageId":"148","endLine":10,"endColumn":54},{"ruleId":"150","severity":1,"message":"151","line":21,"column":3,"nodeType":"152","endLine":21,"endColumn":5,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"154","line":37,"column":5,"nodeType":"152","endLine":37,"endColumn":7,"suggestions":"155"},{"ruleId":"150","severity":1,"message":"156","line":19,"column":5,"nodeType":"152","endLine":19,"endColumn":7,"suggestions":"157"},{"ruleId":"150","severity":1,"message":"158","line":30,"column":6,"nodeType":"152","endLine":30,"endColumn":8,"suggestions":"159"},{"ruleId":"145","severity":1,"message":"160","line":1,"column":28,"nodeType":"147","messageId":"148","endLine":1,"endColumn":37},{"ruleId":"145","severity":1,"message":"160","line":1,"column":28,"nodeType":"147","messageId":"148","endLine":1,"endColumn":37},{"ruleId":"161","severity":1,"message":"162","line":25,"column":25,"nodeType":"163","messageId":"164","endLine":25,"endColumn":27},{"ruleId":"161","severity":1,"message":"165","line":85,"column":24,"nodeType":"163","messageId":"166","endLine":85,"endColumn":26},{"ruleId":"145","severity":1,"message":"160","line":1,"column":26,"nodeType":"147","messageId":"148","endLine":1,"endColumn":35},{"ruleId":"145","severity":1,"message":"167","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":11},{"ruleId":"168","severity":1,"message":"169","line":7,"column":19,"nodeType":"170","messageId":"171","endLine":7,"endColumn":32,"fix":"172"},{"ruleId":"145","severity":1,"message":"173","line":8,"column":10,"nodeType":"147","messageId":"148","endLine":8,"endColumn":25},{"ruleId":"145","severity":1,"message":"174","line":8,"column":27,"nodeType":"147","messageId":"148","endLine":8,"endColumn":39},{"ruleId":"145","severity":1,"message":"175","line":9,"column":9,"nodeType":"147","messageId":"148","endLine":9,"endColumn":16},{"ruleId":"176","severity":1,"message":"177","line":58,"column":1,"nodeType":"178","messageId":"179","endLine":58,"endColumn":134},{"ruleId":"145","severity":1,"message":"180","line":9,"column":7,"nodeType":"147","messageId":"148","endLine":9,"endColumn":9},{"ruleId":"145","severity":1,"message":"181","line":29,"column":11,"nodeType":"147","messageId":"148","endLine":29,"endColumn":15},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'selectedSeason' is assigned a value but never used.","Identifier","unusedVar","'selectedEpisode' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'selectedResult.assetLink' and 'setSeasonResults'. Either include them or remove the dependency array.","ArrayExpression",["184"],"React Hook useEffect has missing dependencies: 'getMoiveSongs', 'getShowSongs', 'selectedResult.assetLink', 'selectedResult.assetType', and 'setSongResults'. Either include them or remove the dependency array.",["185"],"React Hook useEffect has missing dependencies: 'selectedSeason.assetLink' and 'setEpisodeResults'. Either include them or remove the dependency array.",["186"],"React Hook useEffect has missing dependencies: 'selectedEpisode.assetLink' and 'setSongResults'. Either include them or remove the dependency array.",["187"],"'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'api' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"188","text":"189"},"'setYoutubeVideo' is assigned a value but never used.","'youtubeVideo' is assigned a value but never used.","'history' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'id' is assigned a value but never used.","'auth' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},[275,275],"()","Update the dependencies array to be: [selectedResult.assetLink, setSeasonResults]",{"range":"198","text":"199"},"Update the dependencies array to be: [getMoiveSongs, getShowSongs, selectedResult.assetLink, selectedResult.assetType, setSongResults]",{"range":"200","text":"201"},"Update the dependencies array to be: [selectedSeason.assetLink, setEpisodeResults]",{"range":"202","text":"203"},"Update the dependencies array to be: [selectedEpisode.assetLink, setSongResults]",{"range":"204","text":"205"},[578,580],"[selectedResult.assetLink, setSeasonResults]",[1118,1120],"[getMoiveSongs, getShowSongs, selectedResult.assetLink, selectedResult.assetType, setSongResults]",[583,585],"[selectedSeason.assetLink, setEpisodeResults]",[819,821],"[selectedEpisode.assetLink, setSongResults]"]